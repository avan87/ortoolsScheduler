// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scheduler.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "scheduler.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Data_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Data_reflection_ = NULL;
const ::google::protobuf::Descriptor* Pair_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Pair_reflection_ = NULL;
const ::google::protobuf::Descriptor* IncludeConstraints_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IncludeConstraints_reflection_ = NULL;
const ::google::protobuf::Descriptor* ExcludeConstraints_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ExcludeConstraints_reflection_ = NULL;
const ::google::protobuf::Descriptor* PriorityConstraints_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PriorityConstraints_reflection_ = NULL;
const ::google::protobuf::Descriptor* SchedulingSettingsProvider_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SchedulingSettingsProvider_reflection_ = NULL;
const ::google::protobuf::Descriptor* SchedulingParameters_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SchedulingParameters_reflection_ = NULL;
const ::google::protobuf::Descriptor* Worker_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Worker_reflection_ = NULL;
const ::google::protobuf::Descriptor* Job_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Job_reflection_ = NULL;
const ::google::protobuf::Descriptor* Workers_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Workers_reflection_ = NULL;
const ::google::protobuf::Descriptor* Jobs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Jobs_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_scheduler_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_scheduler_2eproto() {
  protobuf_AddDesc_scheduler_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "scheduler.proto");
  GOOGLE_CHECK(file != NULL);
  Data_descriptor_ = file->message_type(0);
  static const int Data_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, workers_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, jobs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, includeconstraints_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, excludeconstraints_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, priorityconstraints_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, schedulingsettingsprovider_),
  };
  Data_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Data_descriptor_,
      Data::default_instance_,
      Data_offsets_,
      -1,
      -1,
      -1,
      sizeof(Data),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, _is_default_instance_));
  Pair_descriptor_ = file->message_type(1);
  static const int Pair_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pair, worker_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pair, job_),
  };
  Pair_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Pair_descriptor_,
      Pair::default_instance_,
      Pair_offsets_,
      -1,
      -1,
      -1,
      sizeof(Pair),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pair, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pair, _is_default_instance_));
  IncludeConstraints_descriptor_ = file->message_type(2);
  static const int IncludeConstraints_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IncludeConstraints, pair_),
  };
  IncludeConstraints_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IncludeConstraints_descriptor_,
      IncludeConstraints::default_instance_,
      IncludeConstraints_offsets_,
      -1,
      -1,
      -1,
      sizeof(IncludeConstraints),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IncludeConstraints, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IncludeConstraints, _is_default_instance_));
  ExcludeConstraints_descriptor_ = file->message_type(3);
  static const int ExcludeConstraints_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExcludeConstraints, pair_),
  };
  ExcludeConstraints_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ExcludeConstraints_descriptor_,
      ExcludeConstraints::default_instance_,
      ExcludeConstraints_offsets_,
      -1,
      -1,
      -1,
      sizeof(ExcludeConstraints),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExcludeConstraints, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExcludeConstraints, _is_default_instance_));
  PriorityConstraints_descriptor_ = file->message_type(4);
  static const int PriorityConstraints_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriorityConstraints, pair_),
  };
  PriorityConstraints_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PriorityConstraints_descriptor_,
      PriorityConstraints::default_instance_,
      PriorityConstraints_offsets_,
      -1,
      -1,
      -1,
      sizeof(PriorityConstraints),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriorityConstraints, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PriorityConstraints, _is_default_instance_));
  SchedulingSettingsProvider_descriptor_ = file->message_type(5);
  static const int SchedulingSettingsProvider_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedulingSettingsProvider, maximizefleetload_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedulingSettingsProvider, weightfactor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedulingSettingsProvider, isoreffactor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedulingSettingsProvider, ratingfactor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedulingSettingsProvider, timefactor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedulingSettingsProvider, transitionfactor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedulingSettingsProvider, payfactor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedulingSettingsProvider, legfactor_),
  };
  SchedulingSettingsProvider_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SchedulingSettingsProvider_descriptor_,
      SchedulingSettingsProvider::default_instance_,
      SchedulingSettingsProvider_offsets_,
      -1,
      -1,
      -1,
      sizeof(SchedulingSettingsProvider),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedulingSettingsProvider, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedulingSettingsProvider, _is_default_instance_));
  SchedulingParameters_descriptor_ = file->message_type(6);
  static const int SchedulingParameters_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedulingParameters, ref_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedulingParameters, iso_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedulingParameters, rating_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedulingParameters, groupid_),
  };
  SchedulingParameters_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SchedulingParameters_descriptor_,
      SchedulingParameters::default_instance_,
      SchedulingParameters_offsets_,
      -1,
      -1,
      -1,
      sizeof(SchedulingParameters),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedulingParameters, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SchedulingParameters, _is_default_instance_));
  Worker_descriptor_ = file->message_type(7);
  static const int Worker_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Worker, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Worker, cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Worker, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Worker, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Worker, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Worker, parameters_),
  };
  Worker_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Worker_descriptor_,
      Worker::default_instance_,
      Worker_offsets_,
      -1,
      -1,
      -1,
      sizeof(Worker),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Worker, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Worker, _is_default_instance_));
  Job_descriptor_ = file->message_type(8);
  static const int Job_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Job, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Job, start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Job, end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Job, cost_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Job, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Job, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Job, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Job, parameters_),
  };
  Job_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Job_descriptor_,
      Job::default_instance_,
      Job_offsets_,
      -1,
      -1,
      -1,
      sizeof(Job),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Job, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Job, _is_default_instance_));
  Workers_descriptor_ = file->message_type(9);
  static const int Workers_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Workers, workers_),
  };
  Workers_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Workers_descriptor_,
      Workers::default_instance_,
      Workers_offsets_,
      -1,
      -1,
      -1,
      sizeof(Workers),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Workers, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Workers, _is_default_instance_));
  Jobs_descriptor_ = file->message_type(10);
  static const int Jobs_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Jobs, jobs_),
  };
  Jobs_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Jobs_descriptor_,
      Jobs::default_instance_,
      Jobs_offsets_,
      -1,
      -1,
      -1,
      sizeof(Jobs),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Jobs, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Jobs, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_scheduler_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Data_descriptor_, &Data::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Pair_descriptor_, &Pair::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IncludeConstraints_descriptor_, &IncludeConstraints::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ExcludeConstraints_descriptor_, &ExcludeConstraints::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PriorityConstraints_descriptor_, &PriorityConstraints::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SchedulingSettingsProvider_descriptor_, &SchedulingSettingsProvider::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SchedulingParameters_descriptor_, &SchedulingParameters::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Worker_descriptor_, &Worker::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Job_descriptor_, &Job::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Workers_descriptor_, &Workers::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Jobs_descriptor_, &Jobs::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_scheduler_2eproto() {
  delete Data::default_instance_;
  delete Data_reflection_;
  delete Pair::default_instance_;
  delete Pair_reflection_;
  delete IncludeConstraints::default_instance_;
  delete IncludeConstraints_reflection_;
  delete ExcludeConstraints::default_instance_;
  delete ExcludeConstraints_reflection_;
  delete PriorityConstraints::default_instance_;
  delete PriorityConstraints_reflection_;
  delete SchedulingSettingsProvider::default_instance_;
  delete SchedulingSettingsProvider_reflection_;
  delete SchedulingParameters::default_instance_;
  delete SchedulingParameters_reflection_;
  delete Worker::default_instance_;
  delete Worker_reflection_;
  delete Job::default_instance_;
  delete Job_reflection_;
  delete Workers::default_instance_;
  delete Workers_reflection_;
  delete Jobs::default_instance_;
  delete Jobs_reflection_;
}

void protobuf_AddDesc_scheduler_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_scheduler_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017scheduler.proto\"\212\002\n\004Data\022\030\n\007workers\030\001 "
    "\003(\0132\007.Worker\022\022\n\004jobs\030\002 \003(\0132\004.Job\022/\n\022incl"
    "udeConstraints\030\003 \001(\0132\023.IncludeConstraint"
    "s\022/\n\022excludeConstraints\030\004 \001(\0132\023.ExcludeC"
    "onstraints\0221\n\023priorityConstraints\030\005 \001(\0132"
    "\024.PriorityConstraints\022\?\n\032schedulingSetti"
    "ngsProvider\030\006 \001(\0132\033.SchedulingSettingsPr"
    "ovider\"2\n\004Pair\022\027\n\006worker\030\001 \001(\0132\007.Worker\022"
    "\021\n\003job\030\002 \001(\0132\004.Job\")\n\022IncludeConstraints"
    "\022\023\n\004pair\030\001 \003(\0132\005.Pair\")\n\022ExcludeConstrai"
    "nts\022\023\n\004pair\030\001 \003(\0132\005.Pair\"*\n\023PriorityCons"
    "traints\022\023\n\004pair\030\001 \003(\0132\005.Pair\"\315\001\n\032Schedul"
    "ingSettingsProvider\022\031\n\021MaximizeFleetLoad"
    "\030\001 \001(\010\022\024\n\014WeightFactor\030\002 \001(\005\022\024\n\014IsoRefFa"
    "ctor\030\003 \001(\005\022\024\n\014RatingFactor\030\004 \001(\005\022\022\n\nTime"
    "Factor\030\005 \001(\005\022\030\n\020TransitionFactor\030\006 \001(\005\022\021"
    "\n\tPayFactor\030\007 \001(\005\022\021\n\tLegFactor\030\010 \001(\005\"Q\n\024"
    "SchedulingParameters\022\013\n\003Ref\030\001 \001(\010\022\013\n\003Iso"
    "\030\002 \001(\010\022\016\n\006Rating\030\003 \001(\005\022\017\n\007GroupId\030\004 \001(\t\""
    "q\n\006Worker\022\n\n\002Id\030\001 \001(\t\022\014\n\004Cost\030\002 \001(\005\022\014\n\004N"
    "ame\030\003 \001(\t\022\t\n\001X\030\004 \001(\001\022\t\n\001Y\030\005 \001(\001\022)\n\nParam"
    "eters\030\006 \001(\0132\025.SchedulingParameters\"\212\001\n\003J"
    "ob\022\n\n\002Id\030\001 \001(\t\022\r\n\005Start\030\002 \001(\t\022\013\n\003End\030\003 \001"
    "(\t\022\014\n\004Cost\030\004 \001(\005\022\014\n\004Name\030\005 \001(\t\022\t\n\001X\030\006 \001("
    "\001\022\t\n\001Y\030\007 \001(\001\022)\n\nParameters\030\010 \001(\0132\025.Sched"
    "ulingParameters\"#\n\007Workers\022\030\n\007workers\030\001 "
    "\003(\0132\007.Worker\"\032\n\004Jobs\022\022\n\004jobs\030\001 \003(\0132\004.Job"
    "2+\n\010Schedule\022\037\n\013GetSchedule\022\005.Data\032\005.Pai"
    "r\"\0000\001B5\n\032io.grpc.examples.schedulerB\016Sch"
    "edulerProtoP\001\242\002\004SCHDb\006proto3", 1188);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "scheduler.proto", &protobuf_RegisterTypes);
  Data::default_instance_ = new Data();
  Pair::default_instance_ = new Pair();
  IncludeConstraints::default_instance_ = new IncludeConstraints();
  ExcludeConstraints::default_instance_ = new ExcludeConstraints();
  PriorityConstraints::default_instance_ = new PriorityConstraints();
  SchedulingSettingsProvider::default_instance_ = new SchedulingSettingsProvider();
  SchedulingParameters::default_instance_ = new SchedulingParameters();
  Worker::default_instance_ = new Worker();
  Job::default_instance_ = new Job();
  Workers::default_instance_ = new Workers();
  Jobs::default_instance_ = new Jobs();
  Data::default_instance_->InitAsDefaultInstance();
  Pair::default_instance_->InitAsDefaultInstance();
  IncludeConstraints::default_instance_->InitAsDefaultInstance();
  ExcludeConstraints::default_instance_->InitAsDefaultInstance();
  PriorityConstraints::default_instance_->InitAsDefaultInstance();
  SchedulingSettingsProvider::default_instance_->InitAsDefaultInstance();
  SchedulingParameters::default_instance_->InitAsDefaultInstance();
  Worker::default_instance_->InitAsDefaultInstance();
  Job::default_instance_->InitAsDefaultInstance();
  Workers::default_instance_->InitAsDefaultInstance();
  Jobs::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_scheduler_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_scheduler_2eproto {
  StaticDescriptorInitializer_scheduler_2eproto() {
    protobuf_AddDesc_scheduler_2eproto();
  }
} static_descriptor_initializer_scheduler_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Data::kWorkersFieldNumber;
const int Data::kJobsFieldNumber;
const int Data::kIncludeConstraintsFieldNumber;
const int Data::kExcludeConstraintsFieldNumber;
const int Data::kPriorityConstraintsFieldNumber;
const int Data::kSchedulingSettingsProviderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Data::Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Data)
}

void Data::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  includeconstraints_ = const_cast< ::IncludeConstraints*>(&::IncludeConstraints::default_instance());
  excludeconstraints_ = const_cast< ::ExcludeConstraints*>(&::ExcludeConstraints::default_instance());
  priorityconstraints_ = const_cast< ::PriorityConstraints*>(&::PriorityConstraints::default_instance());
  schedulingsettingsprovider_ = const_cast< ::SchedulingSettingsProvider*>(&::SchedulingSettingsProvider::default_instance());
}

Data::Data(const Data& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Data)
}

void Data::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  includeconstraints_ = NULL;
  excludeconstraints_ = NULL;
  priorityconstraints_ = NULL;
  schedulingsettingsprovider_ = NULL;
}

Data::~Data() {
  // @@protoc_insertion_point(destructor:Data)
  SharedDtor();
}

void Data::SharedDtor() {
  if (this != default_instance_) {
    delete includeconstraints_;
    delete excludeconstraints_;
    delete priorityconstraints_;
    delete schedulingsettingsprovider_;
  }
}

void Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Data::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Data_descriptor_;
}

const Data& Data::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_scheduler_2eproto();
  return *default_instance_;
}

Data* Data::default_instance_ = NULL;

Data* Data::New(::google::protobuf::Arena* arena) const {
  Data* n = new Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Data::Clear() {
// @@protoc_insertion_point(message_clear_start:Data)
  if (GetArenaNoVirtual() == NULL && includeconstraints_ != NULL) delete includeconstraints_;
  includeconstraints_ = NULL;
  if (GetArenaNoVirtual() == NULL && excludeconstraints_ != NULL) delete excludeconstraints_;
  excludeconstraints_ = NULL;
  if (GetArenaNoVirtual() == NULL && priorityconstraints_ != NULL) delete priorityconstraints_;
  priorityconstraints_ = NULL;
  if (GetArenaNoVirtual() == NULL && schedulingsettingsprovider_ != NULL) delete schedulingsettingsprovider_;
  schedulingsettingsprovider_ = NULL;
  workers_.Clear();
  jobs_.Clear();
}

bool Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Worker workers = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_workers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_workers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_workers;
        if (input->ExpectTag(18)) goto parse_loop_jobs;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .Job jobs = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_jobs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_jobs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_jobs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse_includeConstraints;
        break;
      }

      // optional .IncludeConstraints includeConstraints = 3;
      case 3: {
        if (tag == 26) {
         parse_includeConstraints:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_includeconstraints()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_excludeConstraints;
        break;
      }

      // optional .ExcludeConstraints excludeConstraints = 4;
      case 4: {
        if (tag == 34) {
         parse_excludeConstraints:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_excludeconstraints()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_priorityConstraints;
        break;
      }

      // optional .PriorityConstraints priorityConstraints = 5;
      case 5: {
        if (tag == 42) {
         parse_priorityConstraints:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_priorityconstraints()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_schedulingSettingsProvider;
        break;
      }

      // optional .SchedulingSettingsProvider schedulingSettingsProvider = 6;
      case 6: {
        if (tag == 50) {
         parse_schedulingSettingsProvider:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_schedulingsettingsprovider()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Data)
  return false;
#undef DO_
}

void Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Data)
  // repeated .Worker workers = 1;
  for (unsigned int i = 0, n = this->workers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->workers(i), output);
  }

  // repeated .Job jobs = 2;
  for (unsigned int i = 0, n = this->jobs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->jobs(i), output);
  }

  // optional .IncludeConstraints includeConstraints = 3;
  if (this->has_includeconstraints()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->includeconstraints_, output);
  }

  // optional .ExcludeConstraints excludeConstraints = 4;
  if (this->has_excludeconstraints()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->excludeconstraints_, output);
  }

  // optional .PriorityConstraints priorityConstraints = 5;
  if (this->has_priorityconstraints()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->priorityconstraints_, output);
  }

  // optional .SchedulingSettingsProvider schedulingSettingsProvider = 6;
  if (this->has_schedulingsettingsprovider()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->schedulingsettingsprovider_, output);
  }

  // @@protoc_insertion_point(serialize_end:Data)
}

::google::protobuf::uint8* Data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Data)
  // repeated .Worker workers = 1;
  for (unsigned int i = 0, n = this->workers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->workers(i), false, target);
  }

  // repeated .Job jobs = 2;
  for (unsigned int i = 0, n = this->jobs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->jobs(i), false, target);
  }

  // optional .IncludeConstraints includeConstraints = 3;
  if (this->has_includeconstraints()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->includeconstraints_, false, target);
  }

  // optional .ExcludeConstraints excludeConstraints = 4;
  if (this->has_excludeconstraints()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->excludeconstraints_, false, target);
  }

  // optional .PriorityConstraints priorityConstraints = 5;
  if (this->has_priorityconstraints()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->priorityconstraints_, false, target);
  }

  // optional .SchedulingSettingsProvider schedulingSettingsProvider = 6;
  if (this->has_schedulingsettingsprovider()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->schedulingsettingsprovider_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Data)
  return target;
}

int Data::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Data)
  int total_size = 0;

  // optional .IncludeConstraints includeConstraints = 3;
  if (this->has_includeconstraints()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->includeconstraints_);
  }

  // optional .ExcludeConstraints excludeConstraints = 4;
  if (this->has_excludeconstraints()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->excludeconstraints_);
  }

  // optional .PriorityConstraints priorityConstraints = 5;
  if (this->has_priorityconstraints()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->priorityconstraints_);
  }

  // optional .SchedulingSettingsProvider schedulingSettingsProvider = 6;
  if (this->has_schedulingsettingsprovider()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->schedulingsettingsprovider_);
  }

  // repeated .Worker workers = 1;
  total_size += 1 * this->workers_size();
  for (int i = 0; i < this->workers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->workers(i));
  }

  // repeated .Job jobs = 2;
  total_size += 1 * this->jobs_size();
  for (int i = 0; i < this->jobs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->jobs(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Data)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Data* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Data)
    MergeFrom(*source);
  }
}

void Data::MergeFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Data)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  workers_.MergeFrom(from.workers_);
  jobs_.MergeFrom(from.jobs_);
  if (from.has_includeconstraints()) {
    mutable_includeconstraints()->::IncludeConstraints::MergeFrom(from.includeconstraints());
  }
  if (from.has_excludeconstraints()) {
    mutable_excludeconstraints()->::ExcludeConstraints::MergeFrom(from.excludeconstraints());
  }
  if (from.has_priorityconstraints()) {
    mutable_priorityconstraints()->::PriorityConstraints::MergeFrom(from.priorityconstraints());
  }
  if (from.has_schedulingsettingsprovider()) {
    mutable_schedulingsettingsprovider()->::SchedulingSettingsProvider::MergeFrom(from.schedulingsettingsprovider());
  }
}

void Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Data::CopyFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Data::IsInitialized() const {

  return true;
}

void Data::Swap(Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Data::InternalSwap(Data* other) {
  workers_.UnsafeArenaSwap(&other->workers_);
  jobs_.UnsafeArenaSwap(&other->jobs_);
  std::swap(includeconstraints_, other->includeconstraints_);
  std::swap(excludeconstraints_, other->excludeconstraints_);
  std::swap(priorityconstraints_, other->priorityconstraints_);
  std::swap(schedulingsettingsprovider_, other->schedulingsettingsprovider_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Data::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Data_descriptor_;
  metadata.reflection = Data_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Data

// repeated .Worker workers = 1;
int Data::workers_size() const {
  return workers_.size();
}
void Data::clear_workers() {
  workers_.Clear();
}
const ::Worker& Data::workers(int index) const {
  // @@protoc_insertion_point(field_get:Data.workers)
  return workers_.Get(index);
}
::Worker* Data::mutable_workers(int index) {
  // @@protoc_insertion_point(field_mutable:Data.workers)
  return workers_.Mutable(index);
}
::Worker* Data::add_workers() {
  // @@protoc_insertion_point(field_add:Data.workers)
  return workers_.Add();
}
::google::protobuf::RepeatedPtrField< ::Worker >*
Data::mutable_workers() {
  // @@protoc_insertion_point(field_mutable_list:Data.workers)
  return &workers_;
}
const ::google::protobuf::RepeatedPtrField< ::Worker >&
Data::workers() const {
  // @@protoc_insertion_point(field_list:Data.workers)
  return workers_;
}

// repeated .Job jobs = 2;
int Data::jobs_size() const {
  return jobs_.size();
}
void Data::clear_jobs() {
  jobs_.Clear();
}
const ::Job& Data::jobs(int index) const {
  // @@protoc_insertion_point(field_get:Data.jobs)
  return jobs_.Get(index);
}
::Job* Data::mutable_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:Data.jobs)
  return jobs_.Mutable(index);
}
::Job* Data::add_jobs() {
  // @@protoc_insertion_point(field_add:Data.jobs)
  return jobs_.Add();
}
::google::protobuf::RepeatedPtrField< ::Job >*
Data::mutable_jobs() {
  // @@protoc_insertion_point(field_mutable_list:Data.jobs)
  return &jobs_;
}
const ::google::protobuf::RepeatedPtrField< ::Job >&
Data::jobs() const {
  // @@protoc_insertion_point(field_list:Data.jobs)
  return jobs_;
}

// optional .IncludeConstraints includeConstraints = 3;
bool Data::has_includeconstraints() const {
  return !_is_default_instance_ && includeconstraints_ != NULL;
}
void Data::clear_includeconstraints() {
  if (GetArenaNoVirtual() == NULL && includeconstraints_ != NULL) delete includeconstraints_;
  includeconstraints_ = NULL;
}
const ::IncludeConstraints& Data::includeconstraints() const {
  // @@protoc_insertion_point(field_get:Data.includeConstraints)
  return includeconstraints_ != NULL ? *includeconstraints_ : *default_instance_->includeconstraints_;
}
::IncludeConstraints* Data::mutable_includeconstraints() {
  
  if (includeconstraints_ == NULL) {
    includeconstraints_ = new ::IncludeConstraints;
  }
  // @@protoc_insertion_point(field_mutable:Data.includeConstraints)
  return includeconstraints_;
}
::IncludeConstraints* Data::release_includeconstraints() {
  // @@protoc_insertion_point(field_release:Data.includeConstraints)
  
  ::IncludeConstraints* temp = includeconstraints_;
  includeconstraints_ = NULL;
  return temp;
}
void Data::set_allocated_includeconstraints(::IncludeConstraints* includeconstraints) {
  delete includeconstraints_;
  includeconstraints_ = includeconstraints;
  if (includeconstraints) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Data.includeConstraints)
}

// optional .ExcludeConstraints excludeConstraints = 4;
bool Data::has_excludeconstraints() const {
  return !_is_default_instance_ && excludeconstraints_ != NULL;
}
void Data::clear_excludeconstraints() {
  if (GetArenaNoVirtual() == NULL && excludeconstraints_ != NULL) delete excludeconstraints_;
  excludeconstraints_ = NULL;
}
const ::ExcludeConstraints& Data::excludeconstraints() const {
  // @@protoc_insertion_point(field_get:Data.excludeConstraints)
  return excludeconstraints_ != NULL ? *excludeconstraints_ : *default_instance_->excludeconstraints_;
}
::ExcludeConstraints* Data::mutable_excludeconstraints() {
  
  if (excludeconstraints_ == NULL) {
    excludeconstraints_ = new ::ExcludeConstraints;
  }
  // @@protoc_insertion_point(field_mutable:Data.excludeConstraints)
  return excludeconstraints_;
}
::ExcludeConstraints* Data::release_excludeconstraints() {
  // @@protoc_insertion_point(field_release:Data.excludeConstraints)
  
  ::ExcludeConstraints* temp = excludeconstraints_;
  excludeconstraints_ = NULL;
  return temp;
}
void Data::set_allocated_excludeconstraints(::ExcludeConstraints* excludeconstraints) {
  delete excludeconstraints_;
  excludeconstraints_ = excludeconstraints;
  if (excludeconstraints) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Data.excludeConstraints)
}

// optional .PriorityConstraints priorityConstraints = 5;
bool Data::has_priorityconstraints() const {
  return !_is_default_instance_ && priorityconstraints_ != NULL;
}
void Data::clear_priorityconstraints() {
  if (GetArenaNoVirtual() == NULL && priorityconstraints_ != NULL) delete priorityconstraints_;
  priorityconstraints_ = NULL;
}
const ::PriorityConstraints& Data::priorityconstraints() const {
  // @@protoc_insertion_point(field_get:Data.priorityConstraints)
  return priorityconstraints_ != NULL ? *priorityconstraints_ : *default_instance_->priorityconstraints_;
}
::PriorityConstraints* Data::mutable_priorityconstraints() {
  
  if (priorityconstraints_ == NULL) {
    priorityconstraints_ = new ::PriorityConstraints;
  }
  // @@protoc_insertion_point(field_mutable:Data.priorityConstraints)
  return priorityconstraints_;
}
::PriorityConstraints* Data::release_priorityconstraints() {
  // @@protoc_insertion_point(field_release:Data.priorityConstraints)
  
  ::PriorityConstraints* temp = priorityconstraints_;
  priorityconstraints_ = NULL;
  return temp;
}
void Data::set_allocated_priorityconstraints(::PriorityConstraints* priorityconstraints) {
  delete priorityconstraints_;
  priorityconstraints_ = priorityconstraints;
  if (priorityconstraints) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Data.priorityConstraints)
}

// optional .SchedulingSettingsProvider schedulingSettingsProvider = 6;
bool Data::has_schedulingsettingsprovider() const {
  return !_is_default_instance_ && schedulingsettingsprovider_ != NULL;
}
void Data::clear_schedulingsettingsprovider() {
  if (GetArenaNoVirtual() == NULL && schedulingsettingsprovider_ != NULL) delete schedulingsettingsprovider_;
  schedulingsettingsprovider_ = NULL;
}
const ::SchedulingSettingsProvider& Data::schedulingsettingsprovider() const {
  // @@protoc_insertion_point(field_get:Data.schedulingSettingsProvider)
  return schedulingsettingsprovider_ != NULL ? *schedulingsettingsprovider_ : *default_instance_->schedulingsettingsprovider_;
}
::SchedulingSettingsProvider* Data::mutable_schedulingsettingsprovider() {
  
  if (schedulingsettingsprovider_ == NULL) {
    schedulingsettingsprovider_ = new ::SchedulingSettingsProvider;
  }
  // @@protoc_insertion_point(field_mutable:Data.schedulingSettingsProvider)
  return schedulingsettingsprovider_;
}
::SchedulingSettingsProvider* Data::release_schedulingsettingsprovider() {
  // @@protoc_insertion_point(field_release:Data.schedulingSettingsProvider)
  
  ::SchedulingSettingsProvider* temp = schedulingsettingsprovider_;
  schedulingsettingsprovider_ = NULL;
  return temp;
}
void Data::set_allocated_schedulingsettingsprovider(::SchedulingSettingsProvider* schedulingsettingsprovider) {
  delete schedulingsettingsprovider_;
  schedulingsettingsprovider_ = schedulingsettingsprovider;
  if (schedulingsettingsprovider) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Data.schedulingSettingsProvider)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pair::kWorkerFieldNumber;
const int Pair::kJobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pair::Pair()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Pair)
}

void Pair::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  worker_ = const_cast< ::Worker*>(&::Worker::default_instance());
  job_ = const_cast< ::Job*>(&::Job::default_instance());
}

Pair::Pair(const Pair& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Pair)
}

void Pair::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  worker_ = NULL;
  job_ = NULL;
}

Pair::~Pair() {
  // @@protoc_insertion_point(destructor:Pair)
  SharedDtor();
}

void Pair::SharedDtor() {
  if (this != default_instance_) {
    delete worker_;
    delete job_;
  }
}

void Pair::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pair::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Pair_descriptor_;
}

const Pair& Pair::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_scheduler_2eproto();
  return *default_instance_;
}

Pair* Pair::default_instance_ = NULL;

Pair* Pair::New(::google::protobuf::Arena* arena) const {
  Pair* n = new Pair;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pair::Clear() {
// @@protoc_insertion_point(message_clear_start:Pair)
  if (GetArenaNoVirtual() == NULL && worker_ != NULL) delete worker_;
  worker_ = NULL;
  if (GetArenaNoVirtual() == NULL && job_ != NULL) delete job_;
  job_ = NULL;
}

bool Pair::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Pair)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .Worker worker = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_worker()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_job;
        break;
      }

      // optional .Job job = 2;
      case 2: {
        if (tag == 18) {
         parse_job:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_job()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Pair)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Pair)
  return false;
#undef DO_
}

void Pair::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Pair)
  // optional .Worker worker = 1;
  if (this->has_worker()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->worker_, output);
  }

  // optional .Job job = 2;
  if (this->has_job()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->job_, output);
  }

  // @@protoc_insertion_point(serialize_end:Pair)
}

::google::protobuf::uint8* Pair::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Pair)
  // optional .Worker worker = 1;
  if (this->has_worker()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->worker_, false, target);
  }

  // optional .Job job = 2;
  if (this->has_job()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->job_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Pair)
  return target;
}

int Pair::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Pair)
  int total_size = 0;

  // optional .Worker worker = 1;
  if (this->has_worker()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->worker_);
  }

  // optional .Job job = 2;
  if (this->has_job()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->job_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pair::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Pair)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Pair* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Pair>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Pair)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Pair)
    MergeFrom(*source);
  }
}

void Pair::MergeFrom(const Pair& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Pair)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.has_worker()) {
    mutable_worker()->::Worker::MergeFrom(from.worker());
  }
  if (from.has_job()) {
    mutable_job()->::Job::MergeFrom(from.job());
  }
}

void Pair::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Pair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pair::CopyFrom(const Pair& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Pair)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pair::IsInitialized() const {

  return true;
}

void Pair::Swap(Pair* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pair::InternalSwap(Pair* other) {
  std::swap(worker_, other->worker_);
  std::swap(job_, other->job_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pair::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Pair_descriptor_;
  metadata.reflection = Pair_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Pair

// optional .Worker worker = 1;
bool Pair::has_worker() const {
  return !_is_default_instance_ && worker_ != NULL;
}
void Pair::clear_worker() {
  if (GetArenaNoVirtual() == NULL && worker_ != NULL) delete worker_;
  worker_ = NULL;
}
const ::Worker& Pair::worker() const {
  // @@protoc_insertion_point(field_get:Pair.worker)
  return worker_ != NULL ? *worker_ : *default_instance_->worker_;
}
::Worker* Pair::mutable_worker() {
  
  if (worker_ == NULL) {
    worker_ = new ::Worker;
  }
  // @@protoc_insertion_point(field_mutable:Pair.worker)
  return worker_;
}
::Worker* Pair::release_worker() {
  // @@protoc_insertion_point(field_release:Pair.worker)
  
  ::Worker* temp = worker_;
  worker_ = NULL;
  return temp;
}
void Pair::set_allocated_worker(::Worker* worker) {
  delete worker_;
  worker_ = worker;
  if (worker) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Pair.worker)
}

// optional .Job job = 2;
bool Pair::has_job() const {
  return !_is_default_instance_ && job_ != NULL;
}
void Pair::clear_job() {
  if (GetArenaNoVirtual() == NULL && job_ != NULL) delete job_;
  job_ = NULL;
}
const ::Job& Pair::job() const {
  // @@protoc_insertion_point(field_get:Pair.job)
  return job_ != NULL ? *job_ : *default_instance_->job_;
}
::Job* Pair::mutable_job() {
  
  if (job_ == NULL) {
    job_ = new ::Job;
  }
  // @@protoc_insertion_point(field_mutable:Pair.job)
  return job_;
}
::Job* Pair::release_job() {
  // @@protoc_insertion_point(field_release:Pair.job)
  
  ::Job* temp = job_;
  job_ = NULL;
  return temp;
}
void Pair::set_allocated_job(::Job* job) {
  delete job_;
  job_ = job;
  if (job) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Pair.job)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IncludeConstraints::kPairFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IncludeConstraints::IncludeConstraints()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:IncludeConstraints)
}

void IncludeConstraints::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

IncludeConstraints::IncludeConstraints(const IncludeConstraints& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:IncludeConstraints)
}

void IncludeConstraints::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

IncludeConstraints::~IncludeConstraints() {
  // @@protoc_insertion_point(destructor:IncludeConstraints)
  SharedDtor();
}

void IncludeConstraints::SharedDtor() {
  if (this != default_instance_) {
  }
}

void IncludeConstraints::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IncludeConstraints::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IncludeConstraints_descriptor_;
}

const IncludeConstraints& IncludeConstraints::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_scheduler_2eproto();
  return *default_instance_;
}

IncludeConstraints* IncludeConstraints::default_instance_ = NULL;

IncludeConstraints* IncludeConstraints::New(::google::protobuf::Arena* arena) const {
  IncludeConstraints* n = new IncludeConstraints;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IncludeConstraints::Clear() {
// @@protoc_insertion_point(message_clear_start:IncludeConstraints)
  pair_.Clear();
}

bool IncludeConstraints::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:IncludeConstraints)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Pair pair = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_pair:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_pair()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_pair;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:IncludeConstraints)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:IncludeConstraints)
  return false;
#undef DO_
}

void IncludeConstraints::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:IncludeConstraints)
  // repeated .Pair pair = 1;
  for (unsigned int i = 0, n = this->pair_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pair(i), output);
  }

  // @@protoc_insertion_point(serialize_end:IncludeConstraints)
}

::google::protobuf::uint8* IncludeConstraints::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:IncludeConstraints)
  // repeated .Pair pair = 1;
  for (unsigned int i = 0, n = this->pair_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pair(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:IncludeConstraints)
  return target;
}

int IncludeConstraints::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:IncludeConstraints)
  int total_size = 0;

  // repeated .Pair pair = 1;
  total_size += 1 * this->pair_size();
  for (int i = 0; i < this->pair_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pair(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IncludeConstraints::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:IncludeConstraints)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const IncludeConstraints* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const IncludeConstraints>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:IncludeConstraints)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:IncludeConstraints)
    MergeFrom(*source);
  }
}

void IncludeConstraints::MergeFrom(const IncludeConstraints& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:IncludeConstraints)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  pair_.MergeFrom(from.pair_);
}

void IncludeConstraints::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:IncludeConstraints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IncludeConstraints::CopyFrom(const IncludeConstraints& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:IncludeConstraints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IncludeConstraints::IsInitialized() const {

  return true;
}

void IncludeConstraints::Swap(IncludeConstraints* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IncludeConstraints::InternalSwap(IncludeConstraints* other) {
  pair_.UnsafeArenaSwap(&other->pair_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IncludeConstraints::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IncludeConstraints_descriptor_;
  metadata.reflection = IncludeConstraints_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IncludeConstraints

// repeated .Pair pair = 1;
int IncludeConstraints::pair_size() const {
  return pair_.size();
}
void IncludeConstraints::clear_pair() {
  pair_.Clear();
}
const ::Pair& IncludeConstraints::pair(int index) const {
  // @@protoc_insertion_point(field_get:IncludeConstraints.pair)
  return pair_.Get(index);
}
::Pair* IncludeConstraints::mutable_pair(int index) {
  // @@protoc_insertion_point(field_mutable:IncludeConstraints.pair)
  return pair_.Mutable(index);
}
::Pair* IncludeConstraints::add_pair() {
  // @@protoc_insertion_point(field_add:IncludeConstraints.pair)
  return pair_.Add();
}
::google::protobuf::RepeatedPtrField< ::Pair >*
IncludeConstraints::mutable_pair() {
  // @@protoc_insertion_point(field_mutable_list:IncludeConstraints.pair)
  return &pair_;
}
const ::google::protobuf::RepeatedPtrField< ::Pair >&
IncludeConstraints::pair() const {
  // @@protoc_insertion_point(field_list:IncludeConstraints.pair)
  return pair_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExcludeConstraints::kPairFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExcludeConstraints::ExcludeConstraints()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ExcludeConstraints)
}

void ExcludeConstraints::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ExcludeConstraints::ExcludeConstraints(const ExcludeConstraints& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ExcludeConstraints)
}

void ExcludeConstraints::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

ExcludeConstraints::~ExcludeConstraints() {
  // @@protoc_insertion_point(destructor:ExcludeConstraints)
  SharedDtor();
}

void ExcludeConstraints::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ExcludeConstraints::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExcludeConstraints::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ExcludeConstraints_descriptor_;
}

const ExcludeConstraints& ExcludeConstraints::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_scheduler_2eproto();
  return *default_instance_;
}

ExcludeConstraints* ExcludeConstraints::default_instance_ = NULL;

ExcludeConstraints* ExcludeConstraints::New(::google::protobuf::Arena* arena) const {
  ExcludeConstraints* n = new ExcludeConstraints;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExcludeConstraints::Clear() {
// @@protoc_insertion_point(message_clear_start:ExcludeConstraints)
  pair_.Clear();
}

bool ExcludeConstraints::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ExcludeConstraints)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Pair pair = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_pair:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_pair()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_pair;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ExcludeConstraints)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ExcludeConstraints)
  return false;
#undef DO_
}

void ExcludeConstraints::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ExcludeConstraints)
  // repeated .Pair pair = 1;
  for (unsigned int i = 0, n = this->pair_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pair(i), output);
  }

  // @@protoc_insertion_point(serialize_end:ExcludeConstraints)
}

::google::protobuf::uint8* ExcludeConstraints::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ExcludeConstraints)
  // repeated .Pair pair = 1;
  for (unsigned int i = 0, n = this->pair_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pair(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:ExcludeConstraints)
  return target;
}

int ExcludeConstraints::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:ExcludeConstraints)
  int total_size = 0;

  // repeated .Pair pair = 1;
  total_size += 1 * this->pair_size();
  for (int i = 0; i < this->pair_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pair(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExcludeConstraints::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ExcludeConstraints)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ExcludeConstraints* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ExcludeConstraints>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ExcludeConstraints)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ExcludeConstraints)
    MergeFrom(*source);
  }
}

void ExcludeConstraints::MergeFrom(const ExcludeConstraints& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ExcludeConstraints)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  pair_.MergeFrom(from.pair_);
}

void ExcludeConstraints::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ExcludeConstraints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExcludeConstraints::CopyFrom(const ExcludeConstraints& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ExcludeConstraints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExcludeConstraints::IsInitialized() const {

  return true;
}

void ExcludeConstraints::Swap(ExcludeConstraints* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExcludeConstraints::InternalSwap(ExcludeConstraints* other) {
  pair_.UnsafeArenaSwap(&other->pair_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExcludeConstraints::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ExcludeConstraints_descriptor_;
  metadata.reflection = ExcludeConstraints_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExcludeConstraints

// repeated .Pair pair = 1;
int ExcludeConstraints::pair_size() const {
  return pair_.size();
}
void ExcludeConstraints::clear_pair() {
  pair_.Clear();
}
const ::Pair& ExcludeConstraints::pair(int index) const {
  // @@protoc_insertion_point(field_get:ExcludeConstraints.pair)
  return pair_.Get(index);
}
::Pair* ExcludeConstraints::mutable_pair(int index) {
  // @@protoc_insertion_point(field_mutable:ExcludeConstraints.pair)
  return pair_.Mutable(index);
}
::Pair* ExcludeConstraints::add_pair() {
  // @@protoc_insertion_point(field_add:ExcludeConstraints.pair)
  return pair_.Add();
}
::google::protobuf::RepeatedPtrField< ::Pair >*
ExcludeConstraints::mutable_pair() {
  // @@protoc_insertion_point(field_mutable_list:ExcludeConstraints.pair)
  return &pair_;
}
const ::google::protobuf::RepeatedPtrField< ::Pair >&
ExcludeConstraints::pair() const {
  // @@protoc_insertion_point(field_list:ExcludeConstraints.pair)
  return pair_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PriorityConstraints::kPairFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PriorityConstraints::PriorityConstraints()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PriorityConstraints)
}

void PriorityConstraints::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

PriorityConstraints::PriorityConstraints(const PriorityConstraints& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PriorityConstraints)
}

void PriorityConstraints::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

PriorityConstraints::~PriorityConstraints() {
  // @@protoc_insertion_point(destructor:PriorityConstraints)
  SharedDtor();
}

void PriorityConstraints::SharedDtor() {
  if (this != default_instance_) {
  }
}

void PriorityConstraints::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PriorityConstraints::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PriorityConstraints_descriptor_;
}

const PriorityConstraints& PriorityConstraints::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_scheduler_2eproto();
  return *default_instance_;
}

PriorityConstraints* PriorityConstraints::default_instance_ = NULL;

PriorityConstraints* PriorityConstraints::New(::google::protobuf::Arena* arena) const {
  PriorityConstraints* n = new PriorityConstraints;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PriorityConstraints::Clear() {
// @@protoc_insertion_point(message_clear_start:PriorityConstraints)
  pair_.Clear();
}

bool PriorityConstraints::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PriorityConstraints)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Pair pair = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_pair:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_pair()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_pair;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PriorityConstraints)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PriorityConstraints)
  return false;
#undef DO_
}

void PriorityConstraints::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PriorityConstraints)
  // repeated .Pair pair = 1;
  for (unsigned int i = 0, n = this->pair_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pair(i), output);
  }

  // @@protoc_insertion_point(serialize_end:PriorityConstraints)
}

::google::protobuf::uint8* PriorityConstraints::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PriorityConstraints)
  // repeated .Pair pair = 1;
  for (unsigned int i = 0, n = this->pair_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->pair(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:PriorityConstraints)
  return target;
}

int PriorityConstraints::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:PriorityConstraints)
  int total_size = 0;

  // repeated .Pair pair = 1;
  total_size += 1 * this->pair_size();
  for (int i = 0; i < this->pair_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pair(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PriorityConstraints::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PriorityConstraints)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PriorityConstraints* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PriorityConstraints>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PriorityConstraints)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PriorityConstraints)
    MergeFrom(*source);
  }
}

void PriorityConstraints::MergeFrom(const PriorityConstraints& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PriorityConstraints)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  pair_.MergeFrom(from.pair_);
}

void PriorityConstraints::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PriorityConstraints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PriorityConstraints::CopyFrom(const PriorityConstraints& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PriorityConstraints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PriorityConstraints::IsInitialized() const {

  return true;
}

void PriorityConstraints::Swap(PriorityConstraints* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PriorityConstraints::InternalSwap(PriorityConstraints* other) {
  pair_.UnsafeArenaSwap(&other->pair_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PriorityConstraints::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PriorityConstraints_descriptor_;
  metadata.reflection = PriorityConstraints_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PriorityConstraints

// repeated .Pair pair = 1;
int PriorityConstraints::pair_size() const {
  return pair_.size();
}
void PriorityConstraints::clear_pair() {
  pair_.Clear();
}
const ::Pair& PriorityConstraints::pair(int index) const {
  // @@protoc_insertion_point(field_get:PriorityConstraints.pair)
  return pair_.Get(index);
}
::Pair* PriorityConstraints::mutable_pair(int index) {
  // @@protoc_insertion_point(field_mutable:PriorityConstraints.pair)
  return pair_.Mutable(index);
}
::Pair* PriorityConstraints::add_pair() {
  // @@protoc_insertion_point(field_add:PriorityConstraints.pair)
  return pair_.Add();
}
::google::protobuf::RepeatedPtrField< ::Pair >*
PriorityConstraints::mutable_pair() {
  // @@protoc_insertion_point(field_mutable_list:PriorityConstraints.pair)
  return &pair_;
}
const ::google::protobuf::RepeatedPtrField< ::Pair >&
PriorityConstraints::pair() const {
  // @@protoc_insertion_point(field_list:PriorityConstraints.pair)
  return pair_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SchedulingSettingsProvider::kMaximizeFleetLoadFieldNumber;
const int SchedulingSettingsProvider::kWeightFactorFieldNumber;
const int SchedulingSettingsProvider::kIsoRefFactorFieldNumber;
const int SchedulingSettingsProvider::kRatingFactorFieldNumber;
const int SchedulingSettingsProvider::kTimeFactorFieldNumber;
const int SchedulingSettingsProvider::kTransitionFactorFieldNumber;
const int SchedulingSettingsProvider::kPayFactorFieldNumber;
const int SchedulingSettingsProvider::kLegFactorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SchedulingSettingsProvider::SchedulingSettingsProvider()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SchedulingSettingsProvider)
}

void SchedulingSettingsProvider::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SchedulingSettingsProvider::SchedulingSettingsProvider(const SchedulingSettingsProvider& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SchedulingSettingsProvider)
}

void SchedulingSettingsProvider::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  maximizefleetload_ = false;
  weightfactor_ = 0;
  isoreffactor_ = 0;
  ratingfactor_ = 0;
  timefactor_ = 0;
  transitionfactor_ = 0;
  payfactor_ = 0;
  legfactor_ = 0;
}

SchedulingSettingsProvider::~SchedulingSettingsProvider() {
  // @@protoc_insertion_point(destructor:SchedulingSettingsProvider)
  SharedDtor();
}

void SchedulingSettingsProvider::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SchedulingSettingsProvider::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SchedulingSettingsProvider::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SchedulingSettingsProvider_descriptor_;
}

const SchedulingSettingsProvider& SchedulingSettingsProvider::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_scheduler_2eproto();
  return *default_instance_;
}

SchedulingSettingsProvider* SchedulingSettingsProvider::default_instance_ = NULL;

SchedulingSettingsProvider* SchedulingSettingsProvider::New(::google::protobuf::Arena* arena) const {
  SchedulingSettingsProvider* n = new SchedulingSettingsProvider;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SchedulingSettingsProvider::Clear() {
// @@protoc_insertion_point(message_clear_start:SchedulingSettingsProvider)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SchedulingSettingsProvider, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SchedulingSettingsProvider*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(maximizefleetload_, legfactor_);

#undef ZR_HELPER_
#undef ZR_

}

bool SchedulingSettingsProvider::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SchedulingSettingsProvider)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool MaximizeFleetLoad = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &maximizefleetload_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_WeightFactor;
        break;
      }

      // optional int32 WeightFactor = 2;
      case 2: {
        if (tag == 16) {
         parse_WeightFactor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &weightfactor_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_IsoRefFactor;
        break;
      }

      // optional int32 IsoRefFactor = 3;
      case 3: {
        if (tag == 24) {
         parse_IsoRefFactor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isoreffactor_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_RatingFactor;
        break;
      }

      // optional int32 RatingFactor = 4;
      case 4: {
        if (tag == 32) {
         parse_RatingFactor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ratingfactor_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_TimeFactor;
        break;
      }

      // optional int32 TimeFactor = 5;
      case 5: {
        if (tag == 40) {
         parse_TimeFactor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &timefactor_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_TransitionFactor;
        break;
      }

      // optional int32 TransitionFactor = 6;
      case 6: {
        if (tag == 48) {
         parse_TransitionFactor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &transitionfactor_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_PayFactor;
        break;
      }

      // optional int32 PayFactor = 7;
      case 7: {
        if (tag == 56) {
         parse_PayFactor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &payfactor_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_LegFactor;
        break;
      }

      // optional int32 LegFactor = 8;
      case 8: {
        if (tag == 64) {
         parse_LegFactor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &legfactor_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SchedulingSettingsProvider)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SchedulingSettingsProvider)
  return false;
#undef DO_
}

void SchedulingSettingsProvider::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SchedulingSettingsProvider)
  // optional bool MaximizeFleetLoad = 1;
  if (this->maximizefleetload() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->maximizefleetload(), output);
  }

  // optional int32 WeightFactor = 2;
  if (this->weightfactor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->weightfactor(), output);
  }

  // optional int32 IsoRefFactor = 3;
  if (this->isoreffactor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->isoreffactor(), output);
  }

  // optional int32 RatingFactor = 4;
  if (this->ratingfactor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ratingfactor(), output);
  }

  // optional int32 TimeFactor = 5;
  if (this->timefactor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->timefactor(), output);
  }

  // optional int32 TransitionFactor = 6;
  if (this->transitionfactor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->transitionfactor(), output);
  }

  // optional int32 PayFactor = 7;
  if (this->payfactor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->payfactor(), output);
  }

  // optional int32 LegFactor = 8;
  if (this->legfactor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->legfactor(), output);
  }

  // @@protoc_insertion_point(serialize_end:SchedulingSettingsProvider)
}

::google::protobuf::uint8* SchedulingSettingsProvider::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SchedulingSettingsProvider)
  // optional bool MaximizeFleetLoad = 1;
  if (this->maximizefleetload() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->maximizefleetload(), target);
  }

  // optional int32 WeightFactor = 2;
  if (this->weightfactor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->weightfactor(), target);
  }

  // optional int32 IsoRefFactor = 3;
  if (this->isoreffactor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->isoreffactor(), target);
  }

  // optional int32 RatingFactor = 4;
  if (this->ratingfactor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->ratingfactor(), target);
  }

  // optional int32 TimeFactor = 5;
  if (this->timefactor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->timefactor(), target);
  }

  // optional int32 TransitionFactor = 6;
  if (this->transitionfactor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->transitionfactor(), target);
  }

  // optional int32 PayFactor = 7;
  if (this->payfactor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->payfactor(), target);
  }

  // optional int32 LegFactor = 8;
  if (this->legfactor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->legfactor(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SchedulingSettingsProvider)
  return target;
}

int SchedulingSettingsProvider::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SchedulingSettingsProvider)
  int total_size = 0;

  // optional bool MaximizeFleetLoad = 1;
  if (this->maximizefleetload() != 0) {
    total_size += 1 + 1;
  }

  // optional int32 WeightFactor = 2;
  if (this->weightfactor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->weightfactor());
  }

  // optional int32 IsoRefFactor = 3;
  if (this->isoreffactor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isoreffactor());
  }

  // optional int32 RatingFactor = 4;
  if (this->ratingfactor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ratingfactor());
  }

  // optional int32 TimeFactor = 5;
  if (this->timefactor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->timefactor());
  }

  // optional int32 TransitionFactor = 6;
  if (this->transitionfactor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->transitionfactor());
  }

  // optional int32 PayFactor = 7;
  if (this->payfactor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->payfactor());
  }

  // optional int32 LegFactor = 8;
  if (this->legfactor() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->legfactor());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SchedulingSettingsProvider::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SchedulingSettingsProvider)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SchedulingSettingsProvider* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SchedulingSettingsProvider>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SchedulingSettingsProvider)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SchedulingSettingsProvider)
    MergeFrom(*source);
  }
}

void SchedulingSettingsProvider::MergeFrom(const SchedulingSettingsProvider& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SchedulingSettingsProvider)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.maximizefleetload() != 0) {
    set_maximizefleetload(from.maximizefleetload());
  }
  if (from.weightfactor() != 0) {
    set_weightfactor(from.weightfactor());
  }
  if (from.isoreffactor() != 0) {
    set_isoreffactor(from.isoreffactor());
  }
  if (from.ratingfactor() != 0) {
    set_ratingfactor(from.ratingfactor());
  }
  if (from.timefactor() != 0) {
    set_timefactor(from.timefactor());
  }
  if (from.transitionfactor() != 0) {
    set_transitionfactor(from.transitionfactor());
  }
  if (from.payfactor() != 0) {
    set_payfactor(from.payfactor());
  }
  if (from.legfactor() != 0) {
    set_legfactor(from.legfactor());
  }
}

void SchedulingSettingsProvider::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SchedulingSettingsProvider)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SchedulingSettingsProvider::CopyFrom(const SchedulingSettingsProvider& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SchedulingSettingsProvider)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SchedulingSettingsProvider::IsInitialized() const {

  return true;
}

void SchedulingSettingsProvider::Swap(SchedulingSettingsProvider* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SchedulingSettingsProvider::InternalSwap(SchedulingSettingsProvider* other) {
  std::swap(maximizefleetload_, other->maximizefleetload_);
  std::swap(weightfactor_, other->weightfactor_);
  std::swap(isoreffactor_, other->isoreffactor_);
  std::swap(ratingfactor_, other->ratingfactor_);
  std::swap(timefactor_, other->timefactor_);
  std::swap(transitionfactor_, other->transitionfactor_);
  std::swap(payfactor_, other->payfactor_);
  std::swap(legfactor_, other->legfactor_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SchedulingSettingsProvider::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SchedulingSettingsProvider_descriptor_;
  metadata.reflection = SchedulingSettingsProvider_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SchedulingSettingsProvider

// optional bool MaximizeFleetLoad = 1;
void SchedulingSettingsProvider::clear_maximizefleetload() {
  maximizefleetload_ = false;
}
 bool SchedulingSettingsProvider::maximizefleetload() const {
  // @@protoc_insertion_point(field_get:SchedulingSettingsProvider.MaximizeFleetLoad)
  return maximizefleetload_;
}
 void SchedulingSettingsProvider::set_maximizefleetload(bool value) {
  
  maximizefleetload_ = value;
  // @@protoc_insertion_point(field_set:SchedulingSettingsProvider.MaximizeFleetLoad)
}

// optional int32 WeightFactor = 2;
void SchedulingSettingsProvider::clear_weightfactor() {
  weightfactor_ = 0;
}
 ::google::protobuf::int32 SchedulingSettingsProvider::weightfactor() const {
  // @@protoc_insertion_point(field_get:SchedulingSettingsProvider.WeightFactor)
  return weightfactor_;
}
 void SchedulingSettingsProvider::set_weightfactor(::google::protobuf::int32 value) {
  
  weightfactor_ = value;
  // @@protoc_insertion_point(field_set:SchedulingSettingsProvider.WeightFactor)
}

// optional int32 IsoRefFactor = 3;
void SchedulingSettingsProvider::clear_isoreffactor() {
  isoreffactor_ = 0;
}
 ::google::protobuf::int32 SchedulingSettingsProvider::isoreffactor() const {
  // @@protoc_insertion_point(field_get:SchedulingSettingsProvider.IsoRefFactor)
  return isoreffactor_;
}
 void SchedulingSettingsProvider::set_isoreffactor(::google::protobuf::int32 value) {
  
  isoreffactor_ = value;
  // @@protoc_insertion_point(field_set:SchedulingSettingsProvider.IsoRefFactor)
}

// optional int32 RatingFactor = 4;
void SchedulingSettingsProvider::clear_ratingfactor() {
  ratingfactor_ = 0;
}
 ::google::protobuf::int32 SchedulingSettingsProvider::ratingfactor() const {
  // @@protoc_insertion_point(field_get:SchedulingSettingsProvider.RatingFactor)
  return ratingfactor_;
}
 void SchedulingSettingsProvider::set_ratingfactor(::google::protobuf::int32 value) {
  
  ratingfactor_ = value;
  // @@protoc_insertion_point(field_set:SchedulingSettingsProvider.RatingFactor)
}

// optional int32 TimeFactor = 5;
void SchedulingSettingsProvider::clear_timefactor() {
  timefactor_ = 0;
}
 ::google::protobuf::int32 SchedulingSettingsProvider::timefactor() const {
  // @@protoc_insertion_point(field_get:SchedulingSettingsProvider.TimeFactor)
  return timefactor_;
}
 void SchedulingSettingsProvider::set_timefactor(::google::protobuf::int32 value) {
  
  timefactor_ = value;
  // @@protoc_insertion_point(field_set:SchedulingSettingsProvider.TimeFactor)
}

// optional int32 TransitionFactor = 6;
void SchedulingSettingsProvider::clear_transitionfactor() {
  transitionfactor_ = 0;
}
 ::google::protobuf::int32 SchedulingSettingsProvider::transitionfactor() const {
  // @@protoc_insertion_point(field_get:SchedulingSettingsProvider.TransitionFactor)
  return transitionfactor_;
}
 void SchedulingSettingsProvider::set_transitionfactor(::google::protobuf::int32 value) {
  
  transitionfactor_ = value;
  // @@protoc_insertion_point(field_set:SchedulingSettingsProvider.TransitionFactor)
}

// optional int32 PayFactor = 7;
void SchedulingSettingsProvider::clear_payfactor() {
  payfactor_ = 0;
}
 ::google::protobuf::int32 SchedulingSettingsProvider::payfactor() const {
  // @@protoc_insertion_point(field_get:SchedulingSettingsProvider.PayFactor)
  return payfactor_;
}
 void SchedulingSettingsProvider::set_payfactor(::google::protobuf::int32 value) {
  
  payfactor_ = value;
  // @@protoc_insertion_point(field_set:SchedulingSettingsProvider.PayFactor)
}

// optional int32 LegFactor = 8;
void SchedulingSettingsProvider::clear_legfactor() {
  legfactor_ = 0;
}
 ::google::protobuf::int32 SchedulingSettingsProvider::legfactor() const {
  // @@protoc_insertion_point(field_get:SchedulingSettingsProvider.LegFactor)
  return legfactor_;
}
 void SchedulingSettingsProvider::set_legfactor(::google::protobuf::int32 value) {
  
  legfactor_ = value;
  // @@protoc_insertion_point(field_set:SchedulingSettingsProvider.LegFactor)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SchedulingParameters::kRefFieldNumber;
const int SchedulingParameters::kIsoFieldNumber;
const int SchedulingParameters::kRatingFieldNumber;
const int SchedulingParameters::kGroupIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SchedulingParameters::SchedulingParameters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:SchedulingParameters)
}

void SchedulingParameters::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

SchedulingParameters::SchedulingParameters(const SchedulingParameters& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:SchedulingParameters)
}

void SchedulingParameters::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ref_ = false;
  iso_ = false;
  rating_ = 0;
  groupid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SchedulingParameters::~SchedulingParameters() {
  // @@protoc_insertion_point(destructor:SchedulingParameters)
  SharedDtor();
}

void SchedulingParameters::SharedDtor() {
  groupid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void SchedulingParameters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SchedulingParameters::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SchedulingParameters_descriptor_;
}

const SchedulingParameters& SchedulingParameters::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_scheduler_2eproto();
  return *default_instance_;
}

SchedulingParameters* SchedulingParameters::default_instance_ = NULL;

SchedulingParameters* SchedulingParameters::New(::google::protobuf::Arena* arena) const {
  SchedulingParameters* n = new SchedulingParameters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SchedulingParameters::Clear() {
// @@protoc_insertion_point(message_clear_start:SchedulingParameters)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SchedulingParameters, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SchedulingParameters*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(ref_, rating_);
  groupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool SchedulingParameters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:SchedulingParameters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool Ref = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ref_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Iso;
        break;
      }

      // optional bool Iso = 2;
      case 2: {
        if (tag == 16) {
         parse_Iso:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &iso_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_Rating;
        break;
      }

      // optional int32 Rating = 3;
      case 3: {
        if (tag == 24) {
         parse_Rating:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rating_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_GroupId;
        break;
      }

      // optional string GroupId = 4;
      case 4: {
        if (tag == 34) {
         parse_GroupId:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_groupid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->groupid().data(), this->groupid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "SchedulingParameters.GroupId"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:SchedulingParameters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:SchedulingParameters)
  return false;
#undef DO_
}

void SchedulingParameters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:SchedulingParameters)
  // optional bool Ref = 1;
  if (this->ref() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ref(), output);
  }

  // optional bool Iso = 2;
  if (this->iso() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->iso(), output);
  }

  // optional int32 Rating = 3;
  if (this->rating() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->rating(), output);
  }

  // optional string GroupId = 4;
  if (this->groupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->groupid().data(), this->groupid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SchedulingParameters.GroupId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->groupid(), output);
  }

  // @@protoc_insertion_point(serialize_end:SchedulingParameters)
}

::google::protobuf::uint8* SchedulingParameters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:SchedulingParameters)
  // optional bool Ref = 1;
  if (this->ref() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ref(), target);
  }

  // optional bool Iso = 2;
  if (this->iso() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->iso(), target);
  }

  // optional int32 Rating = 3;
  if (this->rating() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->rating(), target);
  }

  // optional string GroupId = 4;
  if (this->groupid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->groupid().data(), this->groupid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "SchedulingParameters.GroupId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->groupid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:SchedulingParameters)
  return target;
}

int SchedulingParameters::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:SchedulingParameters)
  int total_size = 0;

  // optional bool Ref = 1;
  if (this->ref() != 0) {
    total_size += 1 + 1;
  }

  // optional bool Iso = 2;
  if (this->iso() != 0) {
    total_size += 1 + 1;
  }

  // optional int32 Rating = 3;
  if (this->rating() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rating());
  }

  // optional string GroupId = 4;
  if (this->groupid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->groupid());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SchedulingParameters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:SchedulingParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SchedulingParameters* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SchedulingParameters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:SchedulingParameters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:SchedulingParameters)
    MergeFrom(*source);
  }
}

void SchedulingParameters::MergeFrom(const SchedulingParameters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:SchedulingParameters)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.ref() != 0) {
    set_ref(from.ref());
  }
  if (from.iso() != 0) {
    set_iso(from.iso());
  }
  if (from.rating() != 0) {
    set_rating(from.rating());
  }
  if (from.groupid().size() > 0) {

    groupid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.groupid_);
  }
}

void SchedulingParameters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:SchedulingParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SchedulingParameters::CopyFrom(const SchedulingParameters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:SchedulingParameters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SchedulingParameters::IsInitialized() const {

  return true;
}

void SchedulingParameters::Swap(SchedulingParameters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SchedulingParameters::InternalSwap(SchedulingParameters* other) {
  std::swap(ref_, other->ref_);
  std::swap(iso_, other->iso_);
  std::swap(rating_, other->rating_);
  groupid_.Swap(&other->groupid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SchedulingParameters::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SchedulingParameters_descriptor_;
  metadata.reflection = SchedulingParameters_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SchedulingParameters

// optional bool Ref = 1;
void SchedulingParameters::clear_ref() {
  ref_ = false;
}
 bool SchedulingParameters::ref() const {
  // @@protoc_insertion_point(field_get:SchedulingParameters.Ref)
  return ref_;
}
 void SchedulingParameters::set_ref(bool value) {
  
  ref_ = value;
  // @@protoc_insertion_point(field_set:SchedulingParameters.Ref)
}

// optional bool Iso = 2;
void SchedulingParameters::clear_iso() {
  iso_ = false;
}
 bool SchedulingParameters::iso() const {
  // @@protoc_insertion_point(field_get:SchedulingParameters.Iso)
  return iso_;
}
 void SchedulingParameters::set_iso(bool value) {
  
  iso_ = value;
  // @@protoc_insertion_point(field_set:SchedulingParameters.Iso)
}

// optional int32 Rating = 3;
void SchedulingParameters::clear_rating() {
  rating_ = 0;
}
 ::google::protobuf::int32 SchedulingParameters::rating() const {
  // @@protoc_insertion_point(field_get:SchedulingParameters.Rating)
  return rating_;
}
 void SchedulingParameters::set_rating(::google::protobuf::int32 value) {
  
  rating_ = value;
  // @@protoc_insertion_point(field_set:SchedulingParameters.Rating)
}

// optional string GroupId = 4;
void SchedulingParameters::clear_groupid() {
  groupid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& SchedulingParameters::groupid() const {
  // @@protoc_insertion_point(field_get:SchedulingParameters.GroupId)
  return groupid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SchedulingParameters::set_groupid(const ::std::string& value) {
  
  groupid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SchedulingParameters.GroupId)
}
 void SchedulingParameters::set_groupid(const char* value) {
  
  groupid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SchedulingParameters.GroupId)
}
 void SchedulingParameters::set_groupid(const char* value, size_t size) {
  
  groupid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SchedulingParameters.GroupId)
}
 ::std::string* SchedulingParameters::mutable_groupid() {
  
  // @@protoc_insertion_point(field_mutable:SchedulingParameters.GroupId)
  return groupid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* SchedulingParameters::release_groupid() {
  // @@protoc_insertion_point(field_release:SchedulingParameters.GroupId)
  
  return groupid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void SchedulingParameters::set_allocated_groupid(::std::string* groupid) {
  if (groupid != NULL) {
    
  } else {
    
  }
  groupid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), groupid);
  // @@protoc_insertion_point(field_set_allocated:SchedulingParameters.GroupId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Worker::kIdFieldNumber;
const int Worker::kCostFieldNumber;
const int Worker::kNameFieldNumber;
const int Worker::kXFieldNumber;
const int Worker::kYFieldNumber;
const int Worker::kParametersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Worker::Worker()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Worker)
}

void Worker::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  parameters_ = const_cast< ::SchedulingParameters*>(&::SchedulingParameters::default_instance());
}

Worker::Worker(const Worker& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Worker)
}

void Worker::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cost_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_ = 0;
  y_ = 0;
  parameters_ = NULL;
}

Worker::~Worker() {
  // @@protoc_insertion_point(destructor:Worker)
  SharedDtor();
}

void Worker::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete parameters_;
  }
}

void Worker::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Worker::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Worker_descriptor_;
}

const Worker& Worker::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_scheduler_2eproto();
  return *default_instance_;
}

Worker* Worker::default_instance_ = NULL;

Worker* Worker::New(::google::protobuf::Arena* arena) const {
  Worker* n = new Worker;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Worker::Clear() {
// @@protoc_insertion_point(message_clear_start:Worker)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Worker, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Worker*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_, y_);
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cost_ = 0;
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && parameters_ != NULL) delete parameters_;
  parameters_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool Worker::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Worker)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Worker.Id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_Cost;
        break;
      }

      // optional int32 Cost = 2;
      case 2: {
        if (tag == 16) {
         parse_Cost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cost_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_Name;
        break;
      }

      // optional string Name = 3;
      case 3: {
        if (tag == 26) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Worker.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_X;
        break;
      }

      // optional double X = 4;
      case 4: {
        if (tag == 33) {
         parse_X:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_Y;
        break;
      }

      // optional double Y = 5;
      case 5: {
        if (tag == 41) {
         parse_Y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_Parameters;
        break;
      }

      // optional .SchedulingParameters Parameters = 6;
      case 6: {
        if (tag == 50) {
         parse_Parameters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_parameters()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Worker)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Worker)
  return false;
#undef DO_
}

void Worker::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Worker)
  // optional string Id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Worker.Id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional int32 Cost = 2;
  if (this->cost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cost(), output);
  }

  // optional string Name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Worker.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional double X = 4;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->x(), output);
  }

  // optional double Y = 5;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->y(), output);
  }

  // optional .SchedulingParameters Parameters = 6;
  if (this->has_parameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->parameters_, output);
  }

  // @@protoc_insertion_point(serialize_end:Worker)
}

::google::protobuf::uint8* Worker::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Worker)
  // optional string Id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Worker.Id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional int32 Cost = 2;
  if (this->cost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cost(), target);
  }

  // optional string Name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Worker.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional double X = 4;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->x(), target);
  }

  // optional double Y = 5;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->y(), target);
  }

  // optional .SchedulingParameters Parameters = 6;
  if (this->has_parameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->parameters_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Worker)
  return target;
}

int Worker::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Worker)
  int total_size = 0;

  // optional string Id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional int32 Cost = 2;
  if (this->cost() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cost());
  }

  // optional string Name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional double X = 4;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // optional double Y = 5;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // optional .SchedulingParameters Parameters = 6;
  if (this->has_parameters()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->parameters_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Worker::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Worker)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Worker* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Worker>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Worker)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Worker)
    MergeFrom(*source);
  }
}

void Worker::MergeFrom(const Worker& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Worker)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.cost() != 0) {
    set_cost(from.cost());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.has_parameters()) {
    mutable_parameters()->::SchedulingParameters::MergeFrom(from.parameters());
  }
}

void Worker::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Worker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Worker::CopyFrom(const Worker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Worker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Worker::IsInitialized() const {

  return true;
}

void Worker::Swap(Worker* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Worker::InternalSwap(Worker* other) {
  id_.Swap(&other->id_);
  std::swap(cost_, other->cost_);
  name_.Swap(&other->name_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(parameters_, other->parameters_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Worker::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Worker_descriptor_;
  metadata.reflection = Worker_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Worker

// optional string Id = 1;
void Worker::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Worker::id() const {
  // @@protoc_insertion_point(field_get:Worker.Id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Worker::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Worker.Id)
}
 void Worker::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Worker.Id)
}
 void Worker::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Worker.Id)
}
 ::std::string* Worker::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:Worker.Id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Worker::release_id() {
  // @@protoc_insertion_point(field_release:Worker.Id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Worker::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:Worker.Id)
}

// optional int32 Cost = 2;
void Worker::clear_cost() {
  cost_ = 0;
}
 ::google::protobuf::int32 Worker::cost() const {
  // @@protoc_insertion_point(field_get:Worker.Cost)
  return cost_;
}
 void Worker::set_cost(::google::protobuf::int32 value) {
  
  cost_ = value;
  // @@protoc_insertion_point(field_set:Worker.Cost)
}

// optional string Name = 3;
void Worker::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Worker::name() const {
  // @@protoc_insertion_point(field_get:Worker.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Worker::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Worker.Name)
}
 void Worker::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Worker.Name)
}
 void Worker::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Worker.Name)
}
 ::std::string* Worker::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Worker.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Worker::release_name() {
  // @@protoc_insertion_point(field_release:Worker.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Worker::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Worker.Name)
}

// optional double X = 4;
void Worker::clear_x() {
  x_ = 0;
}
 double Worker::x() const {
  // @@protoc_insertion_point(field_get:Worker.X)
  return x_;
}
 void Worker::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:Worker.X)
}

// optional double Y = 5;
void Worker::clear_y() {
  y_ = 0;
}
 double Worker::y() const {
  // @@protoc_insertion_point(field_get:Worker.Y)
  return y_;
}
 void Worker::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:Worker.Y)
}

// optional .SchedulingParameters Parameters = 6;
bool Worker::has_parameters() const {
  return !_is_default_instance_ && parameters_ != NULL;
}
void Worker::clear_parameters() {
  if (GetArenaNoVirtual() == NULL && parameters_ != NULL) delete parameters_;
  parameters_ = NULL;
}
const ::SchedulingParameters& Worker::parameters() const {
  // @@protoc_insertion_point(field_get:Worker.Parameters)
  return parameters_ != NULL ? *parameters_ : *default_instance_->parameters_;
}
::SchedulingParameters* Worker::mutable_parameters() {
  
  if (parameters_ == NULL) {
    parameters_ = new ::SchedulingParameters;
  }
  // @@protoc_insertion_point(field_mutable:Worker.Parameters)
  return parameters_;
}
::SchedulingParameters* Worker::release_parameters() {
  // @@protoc_insertion_point(field_release:Worker.Parameters)
  
  ::SchedulingParameters* temp = parameters_;
  parameters_ = NULL;
  return temp;
}
void Worker::set_allocated_parameters(::SchedulingParameters* parameters) {
  delete parameters_;
  parameters_ = parameters;
  if (parameters) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Worker.Parameters)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Job::kIdFieldNumber;
const int Job::kStartFieldNumber;
const int Job::kEndFieldNumber;
const int Job::kCostFieldNumber;
const int Job::kNameFieldNumber;
const int Job::kXFieldNumber;
const int Job::kYFieldNumber;
const int Job::kParametersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Job::Job()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Job)
}

void Job::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  parameters_ = const_cast< ::SchedulingParameters*>(&::SchedulingParameters::default_instance());
}

Job::Job(const Job& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Job)
}

void Job::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cost_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  x_ = 0;
  y_ = 0;
  parameters_ = NULL;
}

Job::~Job() {
  // @@protoc_insertion_point(destructor:Job)
  SharedDtor();
}

void Job::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete parameters_;
  }
}

void Job::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Job::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Job_descriptor_;
}

const Job& Job::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_scheduler_2eproto();
  return *default_instance_;
}

Job* Job::default_instance_ = NULL;

Job* Job::New(::google::protobuf::Arena* arena) const {
  Job* n = new Job;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Job::Clear() {
// @@protoc_insertion_point(message_clear_start:Job)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Job, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Job*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_, y_);
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  start_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cost_ = 0;
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && parameters_ != NULL) delete parameters_;
  parameters_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool Job::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Job)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Job.Id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Start;
        break;
      }

      // optional string Start = 2;
      case 2: {
        if (tag == 18) {
         parse_Start:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_start()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->start().data(), this->start().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Job.Start"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_End;
        break;
      }

      // optional string End = 3;
      case 3: {
        if (tag == 26) {
         parse_End:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_end()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->end().data(), this->end().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Job.End"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_Cost;
        break;
      }

      // optional int32 Cost = 4;
      case 4: {
        if (tag == 32) {
         parse_Cost:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cost_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_Name;
        break;
      }

      // optional string Name = 5;
      case 5: {
        if (tag == 42) {
         parse_Name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Job.Name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_X;
        break;
      }

      // optional double X = 6;
      case 6: {
        if (tag == 49) {
         parse_X:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(57)) goto parse_Y;
        break;
      }

      // optional double Y = 7;
      case 7: {
        if (tag == 57) {
         parse_Y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_Parameters;
        break;
      }

      // optional .SchedulingParameters Parameters = 8;
      case 8: {
        if (tag == 66) {
         parse_Parameters:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_parameters()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Job)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Job)
  return false;
#undef DO_
}

void Job::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Job)
  // optional string Id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Job.Id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string Start = 2;
  if (this->start().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start().data(), this->start().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Job.Start");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->start(), output);
  }

  // optional string End = 3;
  if (this->end().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->end().data(), this->end().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Job.End");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->end(), output);
  }

  // optional int32 Cost = 4;
  if (this->cost() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->cost(), output);
  }

  // optional string Name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Job.Name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // optional double X = 6;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->x(), output);
  }

  // optional double Y = 7;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->y(), output);
  }

  // optional .SchedulingParameters Parameters = 8;
  if (this->has_parameters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->parameters_, output);
  }

  // @@protoc_insertion_point(serialize_end:Job)
}

::google::protobuf::uint8* Job::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Job)
  // optional string Id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Job.Id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string Start = 2;
  if (this->start().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->start().data(), this->start().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Job.Start");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->start(), target);
  }

  // optional string End = 3;
  if (this->end().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->end().data(), this->end().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Job.End");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->end(), target);
  }

  // optional int32 Cost = 4;
  if (this->cost() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->cost(), target);
  }

  // optional string Name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Job.Name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // optional double X = 6;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->x(), target);
  }

  // optional double Y = 7;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->y(), target);
  }

  // optional .SchedulingParameters Parameters = 8;
  if (this->has_parameters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->parameters_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Job)
  return target;
}

int Job::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Job)
  int total_size = 0;

  // optional string Id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string Start = 2;
  if (this->start().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->start());
  }

  // optional string End = 3;
  if (this->end().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->end());
  }

  // optional int32 Cost = 4;
  if (this->cost() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cost());
  }

  // optional string Name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional double X = 6;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // optional double Y = 7;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // optional .SchedulingParameters Parameters = 8;
  if (this->has_parameters()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->parameters_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Job::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Job)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Job* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Job>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Job)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Job)
    MergeFrom(*source);
  }
}

void Job::MergeFrom(const Job& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Job)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.start().size() > 0) {

    start_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.start_);
  }
  if (from.end().size() > 0) {

    end_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_);
  }
  if (from.cost() != 0) {
    set_cost(from.cost());
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.has_parameters()) {
    mutable_parameters()->::SchedulingParameters::MergeFrom(from.parameters());
  }
}

void Job::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Job)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Job::CopyFrom(const Job& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Job)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Job::IsInitialized() const {

  return true;
}

void Job::Swap(Job* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Job::InternalSwap(Job* other) {
  id_.Swap(&other->id_);
  start_.Swap(&other->start_);
  end_.Swap(&other->end_);
  std::swap(cost_, other->cost_);
  name_.Swap(&other->name_);
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(parameters_, other->parameters_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Job::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Job_descriptor_;
  metadata.reflection = Job_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Job

// optional string Id = 1;
void Job::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Job::id() const {
  // @@protoc_insertion_point(field_get:Job.Id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Job::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Job.Id)
}
 void Job::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Job.Id)
}
 void Job::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Job.Id)
}
 ::std::string* Job::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:Job.Id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Job::release_id() {
  // @@protoc_insertion_point(field_release:Job.Id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Job::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:Job.Id)
}

// optional string Start = 2;
void Job::clear_start() {
  start_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Job::start() const {
  // @@protoc_insertion_point(field_get:Job.Start)
  return start_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Job::set_start(const ::std::string& value) {
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Job.Start)
}
 void Job::set_start(const char* value) {
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Job.Start)
}
 void Job::set_start(const char* value, size_t size) {
  
  start_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Job.Start)
}
 ::std::string* Job::mutable_start() {
  
  // @@protoc_insertion_point(field_mutable:Job.Start)
  return start_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Job::release_start() {
  // @@protoc_insertion_point(field_release:Job.Start)
  
  return start_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Job::set_allocated_start(::std::string* start) {
  if (start != NULL) {
    
  } else {
    
  }
  start_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start);
  // @@protoc_insertion_point(field_set_allocated:Job.Start)
}

// optional string End = 3;
void Job::clear_end() {
  end_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Job::end() const {
  // @@protoc_insertion_point(field_get:Job.End)
  return end_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Job::set_end(const ::std::string& value) {
  
  end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Job.End)
}
 void Job::set_end(const char* value) {
  
  end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Job.End)
}
 void Job::set_end(const char* value, size_t size) {
  
  end_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Job.End)
}
 ::std::string* Job::mutable_end() {
  
  // @@protoc_insertion_point(field_mutable:Job.End)
  return end_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Job::release_end() {
  // @@protoc_insertion_point(field_release:Job.End)
  
  return end_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Job::set_allocated_end(::std::string* end) {
  if (end != NULL) {
    
  } else {
    
  }
  end_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), end);
  // @@protoc_insertion_point(field_set_allocated:Job.End)
}

// optional int32 Cost = 4;
void Job::clear_cost() {
  cost_ = 0;
}
 ::google::protobuf::int32 Job::cost() const {
  // @@protoc_insertion_point(field_get:Job.Cost)
  return cost_;
}
 void Job::set_cost(::google::protobuf::int32 value) {
  
  cost_ = value;
  // @@protoc_insertion_point(field_set:Job.Cost)
}

// optional string Name = 5;
void Job::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Job::name() const {
  // @@protoc_insertion_point(field_get:Job.Name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Job::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Job.Name)
}
 void Job::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Job.Name)
}
 void Job::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Job.Name)
}
 ::std::string* Job::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:Job.Name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Job::release_name() {
  // @@protoc_insertion_point(field_release:Job.Name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Job::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:Job.Name)
}

// optional double X = 6;
void Job::clear_x() {
  x_ = 0;
}
 double Job::x() const {
  // @@protoc_insertion_point(field_get:Job.X)
  return x_;
}
 void Job::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:Job.X)
}

// optional double Y = 7;
void Job::clear_y() {
  y_ = 0;
}
 double Job::y() const {
  // @@protoc_insertion_point(field_get:Job.Y)
  return y_;
}
 void Job::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:Job.Y)
}

// optional .SchedulingParameters Parameters = 8;
bool Job::has_parameters() const {
  return !_is_default_instance_ && parameters_ != NULL;
}
void Job::clear_parameters() {
  if (GetArenaNoVirtual() == NULL && parameters_ != NULL) delete parameters_;
  parameters_ = NULL;
}
const ::SchedulingParameters& Job::parameters() const {
  // @@protoc_insertion_point(field_get:Job.Parameters)
  return parameters_ != NULL ? *parameters_ : *default_instance_->parameters_;
}
::SchedulingParameters* Job::mutable_parameters() {
  
  if (parameters_ == NULL) {
    parameters_ = new ::SchedulingParameters;
  }
  // @@protoc_insertion_point(field_mutable:Job.Parameters)
  return parameters_;
}
::SchedulingParameters* Job::release_parameters() {
  // @@protoc_insertion_point(field_release:Job.Parameters)
  
  ::SchedulingParameters* temp = parameters_;
  parameters_ = NULL;
  return temp;
}
void Job::set_allocated_parameters(::SchedulingParameters* parameters) {
  delete parameters_;
  parameters_ = parameters;
  if (parameters) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:Job.Parameters)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Workers::kWorkersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Workers::Workers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Workers)
}

void Workers::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Workers::Workers(const Workers& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Workers)
}

void Workers::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Workers::~Workers() {
  // @@protoc_insertion_point(destructor:Workers)
  SharedDtor();
}

void Workers::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Workers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Workers::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Workers_descriptor_;
}

const Workers& Workers::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_scheduler_2eproto();
  return *default_instance_;
}

Workers* Workers::default_instance_ = NULL;

Workers* Workers::New(::google::protobuf::Arena* arena) const {
  Workers* n = new Workers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Workers::Clear() {
// @@protoc_insertion_point(message_clear_start:Workers)
  workers_.Clear();
}

bool Workers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Workers)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Worker workers = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_workers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_workers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_workers;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Workers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Workers)
  return false;
#undef DO_
}

void Workers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Workers)
  // repeated .Worker workers = 1;
  for (unsigned int i = 0, n = this->workers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->workers(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Workers)
}

::google::protobuf::uint8* Workers::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Workers)
  // repeated .Worker workers = 1;
  for (unsigned int i = 0, n = this->workers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->workers(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Workers)
  return target;
}

int Workers::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Workers)
  int total_size = 0;

  // repeated .Worker workers = 1;
  total_size += 1 * this->workers_size();
  for (int i = 0; i < this->workers_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->workers(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Workers::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Workers)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Workers* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Workers>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Workers)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Workers)
    MergeFrom(*source);
  }
}

void Workers::MergeFrom(const Workers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Workers)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  workers_.MergeFrom(from.workers_);
}

void Workers::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Workers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Workers::CopyFrom(const Workers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Workers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Workers::IsInitialized() const {

  return true;
}

void Workers::Swap(Workers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Workers::InternalSwap(Workers* other) {
  workers_.UnsafeArenaSwap(&other->workers_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Workers::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Workers_descriptor_;
  metadata.reflection = Workers_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Workers

// repeated .Worker workers = 1;
int Workers::workers_size() const {
  return workers_.size();
}
void Workers::clear_workers() {
  workers_.Clear();
}
const ::Worker& Workers::workers(int index) const {
  // @@protoc_insertion_point(field_get:Workers.workers)
  return workers_.Get(index);
}
::Worker* Workers::mutable_workers(int index) {
  // @@protoc_insertion_point(field_mutable:Workers.workers)
  return workers_.Mutable(index);
}
::Worker* Workers::add_workers() {
  // @@protoc_insertion_point(field_add:Workers.workers)
  return workers_.Add();
}
::google::protobuf::RepeatedPtrField< ::Worker >*
Workers::mutable_workers() {
  // @@protoc_insertion_point(field_mutable_list:Workers.workers)
  return &workers_;
}
const ::google::protobuf::RepeatedPtrField< ::Worker >&
Workers::workers() const {
  // @@protoc_insertion_point(field_list:Workers.workers)
  return workers_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Jobs::kJobsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Jobs::Jobs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Jobs)
}

void Jobs::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Jobs::Jobs(const Jobs& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Jobs)
}

void Jobs::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

Jobs::~Jobs() {
  // @@protoc_insertion_point(destructor:Jobs)
  SharedDtor();
}

void Jobs::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Jobs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Jobs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Jobs_descriptor_;
}

const Jobs& Jobs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_scheduler_2eproto();
  return *default_instance_;
}

Jobs* Jobs::default_instance_ = NULL;

Jobs* Jobs::New(::google::protobuf::Arena* arena) const {
  Jobs* n = new Jobs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Jobs::Clear() {
// @@protoc_insertion_point(message_clear_start:Jobs)
  jobs_.Clear();
}

bool Jobs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Jobs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .Job jobs = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_jobs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_jobs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_jobs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Jobs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Jobs)
  return false;
#undef DO_
}

void Jobs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Jobs)
  // repeated .Job jobs = 1;
  for (unsigned int i = 0, n = this->jobs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->jobs(i), output);
  }

  // @@protoc_insertion_point(serialize_end:Jobs)
}

::google::protobuf::uint8* Jobs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Jobs)
  // repeated .Job jobs = 1;
  for (unsigned int i = 0, n = this->jobs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->jobs(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:Jobs)
  return target;
}

int Jobs::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:Jobs)
  int total_size = 0;

  // repeated .Job jobs = 1;
  total_size += 1 * this->jobs_size();
  for (int i = 0; i < this->jobs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->jobs(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Jobs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Jobs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Jobs* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Jobs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Jobs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Jobs)
    MergeFrom(*source);
  }
}

void Jobs::MergeFrom(const Jobs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Jobs)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  jobs_.MergeFrom(from.jobs_);
}

void Jobs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Jobs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Jobs::CopyFrom(const Jobs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Jobs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Jobs::IsInitialized() const {

  return true;
}

void Jobs::Swap(Jobs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Jobs::InternalSwap(Jobs* other) {
  jobs_.UnsafeArenaSwap(&other->jobs_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Jobs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Jobs_descriptor_;
  metadata.reflection = Jobs_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Jobs

// repeated .Job jobs = 1;
int Jobs::jobs_size() const {
  return jobs_.size();
}
void Jobs::clear_jobs() {
  jobs_.Clear();
}
const ::Job& Jobs::jobs(int index) const {
  // @@protoc_insertion_point(field_get:Jobs.jobs)
  return jobs_.Get(index);
}
::Job* Jobs::mutable_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:Jobs.jobs)
  return jobs_.Mutable(index);
}
::Job* Jobs::add_jobs() {
  // @@protoc_insertion_point(field_add:Jobs.jobs)
  return jobs_.Add();
}
::google::protobuf::RepeatedPtrField< ::Job >*
Jobs::mutable_jobs() {
  // @@protoc_insertion_point(field_mutable_list:Jobs.jobs)
  return &jobs_;
}
const ::google::protobuf::RepeatedPtrField< ::Job >&
Jobs::jobs() const {
  // @@protoc_insertion_point(field_list:Jobs.jobs)
  return jobs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
